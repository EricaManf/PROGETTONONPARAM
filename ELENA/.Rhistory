C_st <- exp_cov_function( grid, alpha, beta )
image( C_st,
main = 'Exponential covariance function',
xlab = 'grid', ylab = 'grid')
m <- sin(pi*grid)+sin(2*pi*grid)
n <- 100
set.seed(26111992)
data <- generate_gauss_fdata(N = n,centerline = m,Cov=C_st)
matplot(grid,t(data), type="l", col=adjustcolor(col=1,alpha.f = .4))
lines(grid,m, col="blue", lwd=5)
f_data <- fData(grid,data)
plot(f_data) # what happens if I do plot(data)?
lines(grid,m, col="black", lwd=5)
class(f_data)
alpha <-  1
beta <-  0.2
C_st <- exp_cov_function( grid, alpha, beta )
data <- generate_gauss_fdata(N = n,centerline = m,Cov=C_st)
f_data <- fData(grid,data)
plot(f_data, main="High overall level of variability")
alpha <-  .1
beta <-  0.0001
C_st <- exp_cov_function( grid, alpha, beta )
data <- generate_gauss_fdata(N = n,centerline = m,Cov=C_st)
f_data <- fData(grid,data)
plot(f_data, main="High autocorrelation")
alpha <-  .1
beta <-  100
C_st <- exp_cov_function( grid, alpha, beta )
data <- generate_gauss_fdata(N = n,centerline = m,Cov=C_st)
f_data <- fData(grid,data)
plot(f_data, main="Virtually uncorrelated signals")
data("mfD_healthy") #
univariate_fdata <- mfD_healthy$fDList[[1]] # I consider the first lead only
plot(univariate_fdata)
band_depth <- BD(Data = univariate_fdata)
modified_band_depth <- MBD(Data = univariate_fdata)
median_curve <- median_fData(fData = univariate_fdata, type = "MBD") # still an fData object
median_curve_manual <- univariate_fdata[which.max(modified_band_depth),] # still an fData object
all(median_curve_manual$values==median_curve$values)
plot(univariate_fdata)
grid_ecg <- seq(median_curve_manual$t0,median_curve_manual$tP,by=median_curve_manual$h)
lines(grid_ecg,median_curve_manual$values)
bivariate_data <- as.mfData(list(mfD_healthy$fDList[[1]], mfD_healthy$fDList[[2]]))
plot(bivariate_data)
cor_spearman(bivariate_data, ordering='MEI')
MEI_first_lead <- MEI(bivariate_data$fDList[[1]])
MEI_second_lead <- MEI(bivariate_data$fDList[[2]])
cor(MEI_first_lead, MEI_second_lead)
do.call(args = lapply(1:2, function(ind)
MEI(bivariate_data$fDList[[ind]])), what = "cor")
alpha <-  0.2
beta <-  0.002
C_st <- exp_cov_function( grid, alpha, beta )
data <- generate_gauss_fdata(N = n,centerline = m,Cov=C_st)
f_data <- fData(grid,data)
outlier_share <- .1
n_outliers <-   n*outlier_share
out_highlighter <- rep(c(1,2),c(n-n_outliers,n_outliers))
f_data_temp <- f_data[1:(n*(1-outlier_share)),] # Coding tip: subsetting is mabe possible by the S3 class fdata
mag_temp <- f_data[(n*(1-outlier_share)+1):n,] * runif(10,2,3)
f_data_mag <- append_fData(f_data_temp,mag_temp)
plot(f_data_mag, col=out_highlighter)
shift_q <- .5
mu_warp=mu=sin(pi*grid+shift_q)+sin(2*pi*grid+shift_q)
shape_temp=generate_gauss_fdata(N = n_outliers, mu_warp, Cov=C_st)
shape_temp=fData(grid,shape_temp)
fdata_shape=append_fData(f_data_temp,shape_temp)
plot(fdata_shape, col=out_highlighter)
invisible(fbplot(f_data_mag, main="Magnitude outliers"))
invisible(outliergram(f_data_mag))
fbplot(fdata_shape, main="Shape outliers")
outliergram(fdata_shape)
out_shape <- outliergram(fdata_shape, display = FALSE)
out_shape$ID_outliers
#library(sf)
library(dplyr)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
# controllo ingressi in area c
setwd('C:/Users/Elena/Desktop/Elena/Polimi/MAGISTRALE/Nonparametric statistics/PROGETTO ALZHEIMER')
dataset_xsectional <- read.csv("oasis_cross-sectional.csv", header = T)
dataset_longitudinal <- read.csv("oasis_longitudinal.csv", header = T)
help(lung)
View(lung)
dataset_surv %>% filter(dataset_longitudinal, dataset_longitudinal$Group != 'Demented')
dataset_surv %>% filter(dataset_longitudinal, dataset_longitudinal$Group != 'Demented') %>% dataset_longitudinal
dataset_surv <- dataset_longitudinal
dataset_surv %>% filter(dataset_surv, dataset_surv$Group != 'Demented')
View(dataset_surv)
dataset_surv %>% filter(dataset_surv, dataset_surv$Group == 'Demented')
dataset_surv %>% filter(dataset_surv, Group != 'Demented')
dataset_surv %>% filter(dataset_surv$Group != 'Demented')
View(dataset_surv)
dataset_surv %<% filter(dataset_surv$Group != 'Demented')
dataset_surv %>% filter(dataset_surv$Group != 'Demented')
View(dataset_surv)
dataset_surv %>% filter(dataset_surv, dataset_surv$Group != 'Demented')
dataset_surv %>% filter(dataset_surv$Group != 'Demented') %>% dataset_surv
dataset_surv %>% filter(Group != 'Demented')
View(dataset_surv)
dataset_surv %>%  group_by(Subject.ID) %>%   filter(Group != 'Demented')
dataset_surv %>%  filter(Group != 'Demented')
filter(Group != 'Demented')
dataset_surv <- dataset_surv %>%  filter(Group != 'Demented')
View(dataset_surv)
length(unique(dataset_surv$Subject.ID))
v <- []
v <- vector()
v
for(i in length(unique(dataset_surv$Subject.ID))){
for (j in unique(dataset_surv$Subject.ID)){
if (dataset_surv$Subject.ID == j){
v[i] <- dataset_surv$Visit[i]
}
}
}
dataset_surv$Visit[10]
dataset_surv$Visit[2]
dataset_surv$Subject.ID == 9
for (k in 1:373){
for(i in length(unique(dataset_surv$Subject.ID))){
for (j in unique(dataset_surv$Subject.ID)){
if (dataset_surv[k] == j){
v[i] <- dataset_surv$Visit[k]
}
}
}
}
for (k in 1:373){
print(k)
for(i in length(unique(dataset_surv$Subject.ID))){
print(i)
for (j in unique(dataset_surv$Subject.ID)){
print(j)
if (dataset_surv[k] == j){
v[i] <- dataset_surv$Visit[k]
}
}
}
}
for (k in 1:373){
print(k)
for(i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for (j in unique(dataset_surv$Subject.ID)){
print(j)
if (dataset_surv[k] == j){
v[i] <- dataset_surv$Visit[k]
}
}
}
}
v
v <- vector()
for (k in 1:373){
print(k)
for(i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for (j in unique(dataset_surv$Subject.ID)){
print(j)
if (dataset_surv$Subject.ID[k] == j){
v[i] <- dataset_surv$Visit[k]
}
}
}
}
v
v <- vector()
for (i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for(k in 1:373){
print(k)
for (j in unique(dataset_surv$Subject.ID)){
print(j)
if (dataset_surv$Subject.ID[k] == j){
v[i] <- dataset_surv$Visit[k]
}
}
}
}
v
unique(dataset_surv$Subject.ID
unique(dataset_surv$Subject.ID)
unique(dataset_surv$Subject.ID)
v <- vector()
for (i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for(k in 1:373){
print(k)
for (j in unique(dataset_surv$Subject.ID)){
print(j)
if (dataset_surv$Subject.ID[k] == j){
v[i] <- dataset_surv$Visit[k]
}
}
}
}
v <- vector()
for (i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for(k in 1:227){
print(k)
for (j in unique(dataset_surv$Subject.ID)){
print(j)
if (dataset_surv$Subject.ID[k] == j){
v[i] <- dataset_surv$Visit[k]
}
}
}
}
v
v <- vector()
for (i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for(k in 1:227){
print(k)
for (j in unique(dataset_surv$Subject.ID)){
print(j)
if (dataset_surv$Subject.ID[k] == j){
v[i] <- dataset_surv$Visit[k]
print(dataset_surv$Visit[k])
}
}
}
}
dataset_surv$Visit[3]
v <- vector()
for (i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for(j in unique(dataset_surv$Subject.ID)){
print(j)
for (k in 1:227){
print(k)
if (dataset_surv$Subject.ID[k] == j){
v[i] <- dataset_surv$Visit[k]
print(dataset_surv$Visit[k])
}
}
}
}
v
v <- vector()
for (i in 1:length(unique(dataset_surv$Subject.ID))){
print(i)
for(j in unique(dataset_surv$Subject.ID)){
print(j)
for (k in 1:227){
print(k)
if (dataset_surv$Subject.ID[k] == j){
v[i] <- k
print(dataset_surv$Visit[k])
}
}
}
}
v
v.append(4)
length(unique(dataset_surv$Subject.ID))
unique(dataset_surv$Subject.ID))
unique(dataset_surv$Subject.ID)
v <- vector()
for (i in unique(dataset_surv$Subject.ID)){
print(i)
}
v <- vector()
v[1] <- 1
v[2] <- 2
v[3] <- 3
v
v <- vector()
v[1] <- 1
for (j in 2:86){
for (i in 2:226){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
v[j] <- i
# break
}
}
}
v[86] <- 227
v
dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]
dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]
dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]
dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]
dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1]
dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]
dataset_surv$Subject.ID[i]
dataset_surv$Subject.ID[2]
i
r<- 2
dataset_surv$Subject.ID[r]
dataset_surv$Subject.ID[r] != dataset_surv$Subject.ID[r+1]
v <- vector()
v[1] <- 1
for (j in 2:86){
for (i in 2:226){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
v[j] <- i
break
}
}
}
v[86] <- 227
help("break")
v
v <- vector()
v[1] <- 1
for (j in 2:86){
for (i in 2:226){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
v[j] <- i
#break
}
break
}
}
v[86] <- 227
v <- vector()
v[1] <- 1
for (j in 2:86){
for (i in 2:226){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
v[j] <- i
#break
}
break
}
}
v[86] <- 227
help("vector")
v <- vector()
v[1] <- 1
for (i in 2:226){
#for (j in 2:86){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
#v[j] <- i
v[i] <- 1
#break
}
#break
#}
}
#v[86] <- 227
v[227] <- 1
v <- rep(0, 227)
v[1] <- 1
for (i in 2:226){
#for (j in 2:86){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
#v[j] <- i
v[i] <- 1
#break
}
#break
#}
}
#v[86] <- 227
v[227] <- 1
#v <- vector()
v <- rep(0, 227)
#v[1] <- 1
for (i in 2:226){
#for (j in 2:86){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
#v[j] <- i
v[i] <- 1
#break
}
#break
#}
}
#v[86] <- 227
v[227] <- 1
help("slice")
slice(dataset_surv, v)
v <- rep(-1, 227)
#v[1] <- 1
for (i in 2:226){
#for (j in 2:86){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
#v[j] <- i
v[i] <- 1
#break
}
#break
#}
}
#v[86] <- 227
v[227] <- 1
slice(dataset_surv, v)
v <- rep(0, 227)
#v[1] <- 1
for (i in 2:226){
#for (j in 2:86){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
#v[j] <- i
v[i] <- 1
#break
}
#break
#}
}
#v[86] <- 227
v[227] <- 1
v
help("append")
v <- rep(0, 227)
w <- vector()
#v[1] <- 1
for (i in 2:226){
#for (j in 2:86){
if(dataset_surv$Subject.ID[i] == dataset_surv$Subject.ID[i-1] & dataset_surv$Subject.ID[i] != dataset_surv$Subject.ID[i+1]){
#v[j] <- i
v[i] <- 1
append(w, i)
#break
}
#break
#}
}
#v[86] <- 227
v[227] <- 1
append(w, 227)
filter(dataset_surv, v!=0)
filter(dataset_surv, v!=0)
dataset_surv %>% filter(dataset_surv, v!=0)
dataset_surv %>% filter(v!=0)
dataset_surv %>% filter(dataset_surv, v!=0)
filter(dataset_surv, v!=0)
dataset_surv %>% filter(dataset_surv, v!=0)
dataset_surv <- filter(dataset_surv, v!=0)
dataset_surv$ID <- factor(dataset_surv$Subject.ID , labels = seq(1:86))
#dataset_longitudinal$ID <- factor(seq(1:length(unique(dataset_longitudinal$Subject.ID))))
dataset_surv$time_y <- dataset_surv$MR.Delay
#dataset_longitudinal$status_fact <- ifelse(dataset_longitudinal$Group == 'Nondemented',1, 2)
dataset_surv$status_fact <- factor(dataset_surv$Group , labels = (c('Event', 'Censor')))
#dataset_longitudinal$status_fact <- ifelse(dataset_longitudinal$Group == 'Nondemented',1, 2)
dataset_surv$status_fact <- factor(dataset_surv$Group , labels = (c('Censor','Event')))
subs <- head(dataset_surv)
x11()
ggplot(data=subs,aes(x=ID,y=time_y)) +
geom_bar(stat='identity',width=0.2) +
geom_point(aes(color=status_fact,shape=status_fact),size=6) +
coord_flip()
head(Surv(dataset_surv$time_y, dataset_surv$status_fact=='Event'))
fit <- survfit(Surv(time_y, status_fact=='Event') ~ 1, data = dataset_surv)
summary(fit)
kable(head(tidy(fit),20))
surv_median(fit)  #!!!!
x11()
plot(fit, conf.int = T, xlab='Time [days]', ylab = 'Survival Probability', col='red',
main="Kaplan-Meier Curve for dementia Survival")
x11()
ggsurvplot(fit,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=1,
title="Kaplan-Meier Curve for dementia Survival")
x11()
ggsurvplot(fit,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=1,
title="Kaplan-Meier Curve for dementia Survival")
cumulative_incidence <- 1 - fit$surv
x11()
ggsurvplot(fit,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=1,
fun='event',
title="Cumulative Incidence Curve for Lung Cancer Survival")
H <- fit$cumhaz
x11()
ggsurvplot(fit,
risk.table = TRUE, # Add risk table
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=1,
fun='cumhaz',
title="Cumulative Hazard Curve for Dementia Survival")
fit.age <- survfit(Surv(time_y, status) ~ Age, data=dataset_surv)
x11()
ggsurvplot(fit.age, conf.int = F, risk.table.col = "strata", legend='none')
fit.age <- survfit(Surv(time_y, status_fact) ~ Age, data=dataset_surv)
x11()
ggsurvplot(fit.age, conf.int = F, risk.table.col = "strata", legend='none')
fit.age <- survfit(Surv(time_y, status_fact=='Event') ~ Age, data=dataset_surv)
x11()
ggsurvplot(fit.age, conf.int = F, risk.table.col = "strata", legend='none')
x11()
hist(dataset_surv$Age, xlab='Age [years]', main='Histogram of age in Dementia Data')
summary(dataset_surv$Age)
x11()
hist(dataset_surv$Age, xlab='Age [years]', main='Histogram of age in Dementia Data')
glimpse(dataset_surv)
mod.cox <- coxph(Surv(time_y, Group) ~ Age + M.F + EDUC + SES, MMSE, CDR, eTIV, nWBV, ASF, data =  dataset_longitudinal)
summary(mod.cox)
mod.cox <- coxph(Surv(time_y, Group) ~ Age + M.F + EDUC + SES, MMSE, CDR, eTIV, nWBV, ASF, data =  dataset_surv)
mod.cox <- coxph(Surv(time_y, Group) ~ Age + M.F + EDUC + SES, MMSE, CDR, eTIV, nWBV, ASF, data =  dataset_surv)
mod.cox <- coxph(Surv(time_y, status_fact) ~ Age + M.F + EDUC + SES, MMSE, CDR, eTIV, nWBV, ASF, data =  dataset_surv)
