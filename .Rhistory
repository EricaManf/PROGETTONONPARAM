help(na())
help(na)
help(c)
help(%>%)
help(ggplot)
help(ggplot())
install.packages("compositions")
library(compositions)
detach("package:compositions", unload = TRUE)
install.packages("robCompositions")
63.3+22.6
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
```
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
install.packages("roahd")
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
library(roahd)
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
#TEST FOR EQUALITY OF DISTRIBUTIONS:
alpha=0.05
n <- 10
B <- 1000
seed=26111992
sigma=2
x.grid <- seq(-5, 5, by=0.01)
plot(x.grid, dnorm(x.grid,sd=sigma), type='l')
p.value <- numeric(B)
pb=progress_bar$new(total=B)
pb$tick(0)
set.seed(seed)
for(j in 1:B){
x1 <- rnorm(n,sd=sigma)
x2 = rnorm(n,sd=sigma)
p.value[j] <- t.test(x1,y=x2)$p.value
pb$tick()
}
pb=progress_bar$new(total=B)
help('progress_bar')
‘??progress_bar’
??progress_bar
library(progress)
p.value <- numeric(B)
pb=progress_bar$new(total=B)
pb$tick(0)
set.seed(seed)
for(j in 1:B){
x1 <- rnorm(n,sd=sigma)
x2 = rnorm(n,sd=sigma)
p.value[j] <- t.test(x1,y=x2)$p.value
pb$tick()
}
# compared to the one of a continuous uniform...
hist(p.value, main = 'Normal')
plot(ecdf(p.value), main = 'Normal')
abline(0,1, lty=2, col='red')
# as you can see (and as expected...) n
estimated.alpha <- sum(p.value < alpha)/B
c(estimated.alpha - sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975), estimated.alpha, estimated.alpha + sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975))
semiamp=sqrt(6)
plot(x.grid, dunif(x.grid,min=-semiamp,max=semiamp), type='l')
p.value <- numeric(B)
pb=progress_bar$new(total=B)
pb$tick(0)
set.seed(seed)
for(j in 1:B)
{
x1 <- runif(n,min=-semiamp,max=semiamp)
x2 =  runif(n,min=-semiamp,max=semiamp)
p.value[j] <- t.test(x1,y=x2)$p.value
pb$tick()
}
hist(p.value, main = 'Uniform')
plot(ecdf(p.value), main = 'Uniform')
abline(0,1, lty=2, col='red')
estimated.alpha <- sum(p.value < alpha)/B
c(estimated.alpha - sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975), estimated.alpha, estimated.alpha + sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975))
semiamp=sqrt(6)
plot(x.grid, dunif(x.grid,min=-semiamp,max=semiamp), type='l')
p.value <- numeric(B)
pb=progress_bar$new(total=B)
pb$tick(0)
set.seed(seed)
for(j in 1:B)
{
x1 <- runif(n,min=-semiamp,max=semiamp)
x2 =  runif(n,min=-semiamp,max=semiamp)
p.value[j] <- t.test(x1,y=x2)$p.value
pb$tick()
}
hist(p.value, main = 'Uniform')
plot(ecdf(p.value), main = 'Uniform')
abline(0,1, lty=2, col='red')
#
# Apparentely, with leptokurtic data the situation does not seem to change much, let's estimate also the empirical type-I error
#
estimated.alpha <- sum(p.value < alpha)/B
c(estimated.alpha - sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975), estimated.alpha, estimated.alpha + sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975))
x.grid <- seq(-5, 5, by=0.01)
plot(x.grid, dt(x.grid, 2), type='l')
p.value <- numeric(B)
pb=progress_bar$new(total=B)
pb$tick(0)
set.seed(seed)
for(j in 1:B)
{
x.1 <- rt(n, 2)
x.2 = rt(n,2)
p.value[j] <- t.test(x.1,y=x.2)$p.value
pb$tick()
}
hist(p.value, main = 'Student-t')
plot(ecdf(p.value), main = 'Student-t')
abline(0,1, lty=2, col='red')
#In this case I am starting to see a departure from uniformness...
#that reflects on the empirical type-I error!
estimated.alpha <- sum(p.value < alpha)/B
c(estimated.alpha - sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975), estimated.alpha, estimated.alpha + sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975))
x.grid <- seq(-5, 5, by=0.01)
plot(x.grid, dstable(x.grid,1,0), type='l') #cauchy
lines(x.grid, dstable(x.grid,2,0), type='l',col="red") #normal
lines(x.grid, dstable(x.grid,1.5,0), type='l',col="orange")
lines(x.grid, dstable(x.grid,0.5,0), type='l',col="green")
lines(x.grid, dstable(x.grid,0.1,0), type='l',col="blue")
library(stabledist)
install.packages("stabledist")
library(stabledist)
x11()
x.grid <- seq(-5, 5, by=0.01)
plot(x.grid, dstable(x.grid,1,0), type='l') #cauchy
lines(x.grid, dstable(x.grid,2,0), type='l',col="red") #normal
lines(x.grid, dstable(x.grid,1.5,0), type='l',col="orange")
lines(x.grid, dstable(x.grid,0.5,0), type='l',col="green")
lines(x.grid, dstable(x.grid,0.1,0), type='l',col="blue")
x11()
plot(x.grid, dstable(x.grid,1,0), type='l') #cauchy
lines(x.grid, dstable(x.grid,1,0.5), type='l',col="red")
lines(x.grid, dstable(x.grid,1,1), type='l',col="orange")
x.grid <- seq(-5, 5, by=0.01)
plot(x.grid, dnorm(x.grid), type='l')
lines(x.grid, dstable(x.grid,1.5,0), type='l',col='red')
x.grid <- seq(-5, 5, by=0.01)
plot(x.grid, dnorm(x.grid), type='l')
lines(x.grid, dstable(x.grid,1.5,0), type='l',col='red')
p.value <- numeric(B)
pb=progress_bar$new(total=B)
pb$tick(0)
set.seed(seed)
for(j in 1:B)
{
x.1 <- rstable(n,1.5,0)
x.2 = rstable(n,1.5,0)
p.value[j] <- t.test(x.1,y=x.2)$p.value
pb$tick()
}
hist(p.value, main = 'Stable - Alpha=1.5')
plot(ecdf(p.value), main = 'Alpha=1.5')
abline(0,1, lty=2, col='red')
estimated.alpha <- sum(p.value < alpha)/B
c(estimated.alpha - sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975), estimated.alpha, estimated.alpha + sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975))
plot(x.grid, dnorm(x.grid), type='l')
lines(x.grid, dstable(x.grid,.5,0), type='l',col='red')
p.value <- numeric(B)
pb=progress_bar$new(total=B)
pb$tick(0)
set.seed(seed)
for(j in 1:B)
{
x.1 <- rstable(n,.5,0)
x.2 = rstable(n,.5,0)
p.value[j] <- t.test(x.1,y=x.2)$p.value
pb$tick()
}
hist(p.value, main = 'Stable - Alpha = 0.5')
plot(ecdf(p.value), main = 'Alpha = 0.5')
abline(0,1, lty=2, col='red')
estimated.alpha <- sum(p.value < alpha)/B
c(estimated.alpha - sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975), estimated.alpha, estimated.alpha + sqrt(estimated.alpha*(1-estimated.alpha)/B)*qnorm(0.975))
setwd("C:/Users/franc/Desktop/PROGETTO/PROGETTONONPARAM")
setwd("C:/Users/franc/Desktop/NONPA/PROGETTO/PROGETTONONPARAM")
DATA <- read.table("dataset.csv")
head(DATA)
DATA <- read.table("dataset.csv", by=',')
DATA <- read.table("dataset.csv", sep=',')
View(DATA)
DATA <- read.table("dataset.csv", sep=',',header='true')
DATA <- read.table("dataset.csv", sep=',' , header=FALSE)
DATA <- read.table("dataset.csv", sep=',' , header=TRUE)
View(DATA)
attach(DATA)
plot(timedelta,spacedelta)
length(unique(journey_id))
DATA <- read.table("dataset.csv", sep=',' , header=TRUE, nrow=10)
